<plexus>
	<components>
		<component>
			<role>org.unidal.cat.spi.analysis.pipeline.Pipeline</role>
			<role-hint>transaction</role-hint>
			<implementation>org.unidal.cat.plugin.transaction.TransactionPipeline</implementation>
			<instantiation-strategy>per-lookup</instantiation-strategy>
			<requirements>
				<requirement>
					<role>org.unidal.cat.spi.analysis.MessageRoutingStrategy</role>
				</requirement>
				<requirement>
					<role>org.unidal.cat.spi.ReportConfiguration</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>org.unidal.cat.spi.analysis.pipeline.Pipeline</role>
			<role-hint>event</role-hint>
			<implementation>org.unidal.cat.plugin.event.EventPipeline</implementation>
			<instantiation-strategy>per-lookup</instantiation-strategy>
			<requirements>
				<requirement>
					<role>org.unidal.cat.spi.analysis.MessageRoutingStrategy</role>
				</requirement>
				<requirement>
					<role>org.unidal.cat.spi.ReportConfiguration</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>org.unidal.cat.spi.analysis.MessageRoutingStrategy</role>
			<implementation>org.unidal.cat.plugin.routing.DomainHashStrategy</implementation>
			<instantiation-strategy>per-lookup</instantiation-strategy>
		</component>
		<component>
			<role>org.unidal.cat.spi.analysis.MessageRoutingStrategy</role>
			<role-hint>roundrobin</role-hint>
			<implementation>org.unidal.cat.plugin.routing.RoundRobinStrategy</implementation>
			<instantiation-strategy>per-lookup</instantiation-strategy>
		</component>
		<component>
			<role>org.unidal.cat.spi.ReportManager</role>
			<role-hint>transaction</role-hint>
			<implementation>org.unidal.cat.plugin.transaction.TransactionReportManager</implementation>
			<requirements>
				<requirement>
					<role>org.unidal.cat.spi.report.provider.ReportProvider</role>
				</requirement>
				<requirement>
					<role>org.unidal.cat.spi.report.storage.ReportStorage</role>
					<field-name>m_storage</field-name>
				</requirement>
				<requirement>
					<role>org.unidal.cat.spi.report.storage.ReportStorage</role>
					<role-hint>file</role-hint>
					<field-name>m_fileStorage</field-name>
				</requirement>
				<requirement>
					<role>org.unidal.cat.spi.report.internals.ReportDelegateManager</role>
				</requirement>
				<requirement>
					<role>org.unidal.cat.spi.ReportFilterManager</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>org.unidal.cat.spi.report.ReportAggregator</role>
			<role-hint>transaction</role-hint>
			<implementation>org.unidal.cat.plugin.transaction.TransactionReportAggregator</implementation>
		</component>
		<component>
			<role>org.unidal.cat.spi.report.ReportDelegate</role>
			<role-hint>transaction</role-hint>
			<implementation>org.unidal.cat.plugin.transaction.TransactionReportDelegate</implementation>
			<requirements>
				<requirement>
					<role>org.unidal.cat.spi.report.ReportAggregator</role>
					<role-hint>transaction</role-hint>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>org.unidal.cat.spi.analysis.MessageAnalyzer</role>
			<role-hint>transaction</role-hint>
			<implementation>org.unidal.cat.plugin.transaction.TransactionReportAnalyzer</implementation>
			<instantiation-strategy>per-lookup</instantiation-strategy>
			<requirements>
				<requirement>
					<role>com.dianping.cat.config.server.ServerFilterConfigManager</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>org.unidal.cat.plugin.transaction.filter.TransactionReportHelper</role>
			<implementation>org.unidal.cat.plugin.transaction.filter.TransactionReportHelper</implementation>
		</component>
		<component>
			<role>org.unidal.cat.spi.report.ReportFilter</role>
			<role-hint>transaction:type</role-hint>
			<implementation>org.unidal.cat.plugin.transaction.filter.TransactionTypeFilter</implementation>
			<requirements>
				<requirement>
					<role>org.unidal.cat.plugin.transaction.filter.TransactionReportHelper</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>org.unidal.cat.spi.report.ReportFilter</role>
			<role-hint>transaction:type-graph</role-hint>
			<implementation>org.unidal.cat.plugin.transaction.filter.TransactionTypeGraphFilter</implementation>
			<requirements>
				<requirement>
					<role>org.unidal.cat.plugin.transaction.filter.TransactionReportHelper</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>org.unidal.cat.spi.report.ReportFilter</role>
			<role-hint>transaction:name</role-hint>
			<implementation>org.unidal.cat.plugin.transaction.filter.TransactionNameFilter</implementation>
			<requirements>
				<requirement>
					<role>org.unidal.cat.plugin.transaction.filter.TransactionReportHelper</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>org.unidal.cat.spi.report.ReportFilter</role>
			<role-hint>transaction:name-graph</role-hint>
			<implementation>org.unidal.cat.plugin.transaction.filter.TransactionNameGraphFilter</implementation>
			<requirements>
				<requirement>
					<role>org.unidal.cat.plugin.transaction.filter.TransactionReportHelper</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>org.unidal.cat.spi.ReportManager</role>
			<role-hint>event</role-hint>
			<implementation>org.unidal.cat.plugin.event.EventReportManager</implementation>
			<requirements>
				<requirement>
					<role>org.unidal.cat.spi.report.provider.ReportProvider</role>
				</requirement>
				<requirement>
					<role>org.unidal.cat.spi.report.storage.ReportStorage</role>
					<field-name>m_storage</field-name>
				</requirement>
				<requirement>
					<role>org.unidal.cat.spi.report.storage.ReportStorage</role>
					<role-hint>file</role-hint>
					<field-name>m_fileStorage</field-name>
				</requirement>
				<requirement>
					<role>org.unidal.cat.spi.report.internals.ReportDelegateManager</role>
				</requirement>
				<requirement>
					<role>org.unidal.cat.spi.ReportFilterManager</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>org.unidal.cat.spi.report.ReportAggregator</role>
			<role-hint>event</role-hint>
			<implementation>org.unidal.cat.plugin.event.EventReportAggregator</implementation>
		</component>
		<component>
			<role>org.unidal.cat.spi.report.ReportDelegate</role>
			<role-hint>event</role-hint>
			<implementation>org.unidal.cat.plugin.event.EventReportDelegate</implementation>
			<requirements>
				<requirement>
					<role>org.unidal.cat.spi.report.ReportAggregator</role>
					<role-hint>event</role-hint>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>org.unidal.cat.spi.analysis.MessageAnalyzer</role>
			<role-hint>event</role-hint>
			<implementation>org.unidal.cat.plugin.event.EventReportAnalyzer</implementation>
			<instantiation-strategy>per-lookup</instantiation-strategy>
		</component>
		<component>
			<role>org.unidal.cat.spi.report.ReportFilter</role>
			<role-hint>event:report</role-hint>
			<implementation>org.unidal.cat.plugin.event.filter.EventReportFilter</implementation>
		</component>
		<component>
			<role>com.dianping.cat.consumer.problem.ProblemHandler</role>
			<role-hint>default-problem</role-hint>
			<implementation>com.dianping.cat.consumer.problem.DefaultProblemHandler</implementation>
			<configuration>
				<errorType>Error,RuntimeException,Exception</errorType>
			</configuration>
			<requirements>
				<requirement>
					<role>com.dianping.cat.config.server.ServerConfigManager</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>com.dianping.cat.consumer.problem.ProblemHandler</role>
			<role-hint>long-execution</role-hint>
			<implementation>com.dianping.cat.consumer.problem.LongExecutionProblemHandler</implementation>
			<requirements>
				<requirement>
					<role>com.dianping.cat.config.server.ServerConfigManager</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>com.dianping.cat.analysis.MessageAnalyzer</role>
			<role-hint>problem</role-hint>
			<implementation>com.dianping.cat.consumer.problem.ProblemAnalyzer</implementation>
			<instantiation-strategy>per-lookup</instantiation-strategy>
			<requirements>
				<requirement>
					<role>com.dianping.cat.report.ReportManager</role>
					<role-hint>problem</role-hint>
				</requirement>
				<requirement>
					<role>com.dianping.cat.config.server.ServerConfigManager</role>
				</requirement>
				<requirement>
					<role>com.dianping.cat.consumer.problem.ProblemHandler</role>
					<role-hints>
						<role-hint>default-problem</role-hint>
						<role-hint>long-execution</role-hint>
					</role-hints>
					<field-name>m_handlers</field-name>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>com.dianping.cat.report.ReportManager</role>
			<role-hint>problem</role-hint>
			<implementation>com.dianping.cat.report.DefaultReportManager</implementation>
			<instantiation-strategy>per-lookup</instantiation-strategy>
			<configuration>
				<name>problem</name>
			</configuration>
			<requirements>
				<requirement>
					<role>com.dianping.cat.report.ReportDelegate</role>
					<role-hint>problem</role-hint>
				</requirement>
				<requirement>
					<role>com.dianping.cat.report.ReportBucketManager</role>
				</requirement>
				<requirement>
					<role>com.dianping.cat.core.dal.HourlyReportDao</role>
				</requirement>
				<requirement>
					<role>com.dianping.cat.core.dal.HourlyReportContentDao</role>
				</requirement>
				<requirement>
					<role>com.dianping.cat.report.DomainValidator</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>com.dianping.cat.report.ReportDelegate</role>
			<role-hint>problem</role-hint>
			<implementation>com.dianping.cat.consumer.problem.ProblemDelegate</implementation>
			<requirements>
				<requirement>
					<role>com.dianping.cat.task.TaskManager</role>
				</requirement>
				<requirement>
					<role>com.dianping.cat.config.server.ServerFilterConfigManager</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>com.dianping.cat.analysis.MessageAnalyzer</role>
			<role-hint>heartbeat</role-hint>
			<implementation>com.dianping.cat.consumer.heartbeat.HeartbeatAnalyzer</implementation>
			<instantiation-strategy>per-lookup</instantiation-strategy>
			<requirements>
				<requirement>
					<role>com.dianping.cat.report.ReportManager</role>
					<role-hint>heartbeat</role-hint>
				</requirement>
				<requirement>
					<role>com.dianping.cat.config.server.ServerConfigManager</role>
				</requirement>
				<requirement>
					<role>com.dianping.cat.config.server.ServerFilterConfigManager</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>com.dianping.cat.report.ReportManager</role>
			<role-hint>heartbeat</role-hint>
			<implementation>com.dianping.cat.report.DefaultReportManager</implementation>
			<instantiation-strategy>per-lookup</instantiation-strategy>
			<configuration>
				<name>heartbeat</name>
			</configuration>
			<requirements>
				<requirement>
					<role>com.dianping.cat.report.ReportDelegate</role>
					<role-hint>heartbeat</role-hint>
				</requirement>
				<requirement>
					<role>com.dianping.cat.report.ReportBucketManager</role>
				</requirement>
				<requirement>
					<role>com.dianping.cat.core.dal.HourlyReportDao</role>
				</requirement>
				<requirement>
					<role>com.dianping.cat.core.dal.HourlyReportContentDao</role>
				</requirement>
				<requirement>
					<role>com.dianping.cat.report.DomainValidator</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>com.dianping.cat.report.ReportDelegate</role>
			<role-hint>heartbeat</role-hint>
			<implementation>com.dianping.cat.consumer.heartbeat.HeartbeatDelegate</implementation>
			<requirements>
				<requirement>
					<role>com.dianping.cat.task.TaskManager</role>
				</requirement>
				<requirement>
					<role>com.dianping.cat.config.server.ServerFilterConfigManager</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>com.dianping.cat.analysis.MessageAnalyzer</role>
			<role-hint>top</role-hint>
			<implementation>com.dianping.cat.consumer.top.TopAnalyzer</implementation>
			<instantiation-strategy>per-lookup</instantiation-strategy>
			<configuration>
				<errorType>Error,RuntimeException,Exception</errorType>
			</configuration>
			<requirements>
				<requirement>
					<role>com.dianping.cat.report.ReportManager</role>
					<role-hint>top</role-hint>
				</requirement>
				<requirement>
					<role>com.dianping.cat.config.server.ServerConfigManager</role>
				</requirement>
				<requirement>
					<role>com.dianping.cat.config.server.ServerFilterConfigManager</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>com.dianping.cat.report.ReportManager</role>
			<role-hint>top</role-hint>
			<implementation>com.dianping.cat.report.DefaultReportManager</implementation>
			<instantiation-strategy>per-lookup</instantiation-strategy>
			<configuration>
				<name>top</name>
			</configuration>
			<requirements>
				<requirement>
					<role>com.dianping.cat.report.ReportDelegate</role>
					<role-hint>top</role-hint>
				</requirement>
				<requirement>
					<role>com.dianping.cat.report.ReportBucketManager</role>
				</requirement>
				<requirement>
					<role>com.dianping.cat.core.dal.HourlyReportDao</role>
				</requirement>
				<requirement>
					<role>com.dianping.cat.core.dal.HourlyReportContentDao</role>
				</requirement>
				<requirement>
					<role>com.dianping.cat.report.DomainValidator</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>com.dianping.cat.report.ReportDelegate</role>
			<role-hint>top</role-hint>
			<implementation>com.dianping.cat.consumer.top.TopDelegate</implementation>
		</component>
		<component>
			<role>com.dianping.cat.analysis.MessageAnalyzer</role>
			<role-hint>dump</role-hint>
			<implementation>com.dianping.cat.consumer.dump.DumpAnalyzer</implementation>
			<instantiation-strategy>per-lookup</instantiation-strategy>
			<requirements>
				<requirement>
					<role>com.dianping.cat.statistic.ServerStatisticManager</role>
				</requirement>
				<requirement>
					<role>org.unidal.cat.message.storage.MessageDumperManager</role>
				</requirement>
				<requirement>
					<role>org.unidal.cat.message.storage.MessageFinderManager</role>
				</requirement>
				<requirement>
					<role>com.dianping.cat.config.server.ServerConfigManager</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>com.dianping.cat.message.storage.MessageBucketManager</role>
			<role-hint>local</role-hint>
			<implementation>com.dianping.cat.consumer.dump.LocalMessageBucketManager</implementation>
			<requirements>
				<requirement>
					<role>com.dianping.cat.config.server.ServerConfigManager</role>
				</requirement>
				<requirement>
					<role>com.dianping.cat.message.PathBuilder</role>
				</requirement>
				<requirement>
					<role>com.dianping.cat.statistic.ServerStatisticManager</role>
				</requirement>
				<requirement>
					<role>com.dianping.cat.hadoop.hdfs.HdfsUploader</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>com.dianping.cat.service.ProjectService</role>
			<implementation>com.dianping.cat.service.ProjectService</implementation>
			<requirements>
				<requirement>
					<role>com.dianping.cat.core.dal.ProjectDao</role>
				</requirement>
				<requirement>
					<role>com.dianping.cat.config.server.ServerConfigManager</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>com.dianping.cat.analysis.MessageAnalyzer</role>
			<role-hint>state</role-hint>
			<implementation>com.dianping.cat.consumer.state.StateAnalyzer</implementation>
			<instantiation-strategy>per-lookup</instantiation-strategy>
			<requirements>
				<requirement>
					<role>com.dianping.cat.report.ReportManager</role>
					<role-hint>state</role-hint>
				</requirement>
				<requirement>
					<role>com.dianping.cat.statistic.ServerStatisticManager</role>
				</requirement>
				<requirement>
					<role>com.dianping.cat.config.server.ServerConfigManager</role>
				</requirement>
				<requirement>
					<role>com.dianping.cat.config.server.ServerFilterConfigManager</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>com.dianping.cat.report.ReportManager</role>
			<role-hint>state</role-hint>
			<implementation>com.dianping.cat.report.DefaultReportManager</implementation>
			<instantiation-strategy>per-lookup</instantiation-strategy>
			<configuration>
				<name>state</name>
			</configuration>
			<requirements>
				<requirement>
					<role>com.dianping.cat.report.ReportDelegate</role>
					<role-hint>state</role-hint>
				</requirement>
				<requirement>
					<role>com.dianping.cat.report.ReportBucketManager</role>
				</requirement>
				<requirement>
					<role>com.dianping.cat.core.dal.HourlyReportDao</role>
				</requirement>
				<requirement>
					<role>com.dianping.cat.core.dal.HourlyReportContentDao</role>
				</requirement>
				<requirement>
					<role>com.dianping.cat.report.DomainValidator</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>com.dianping.cat.report.ReportDelegate</role>
			<role-hint>state</role-hint>
			<implementation>com.dianping.cat.consumer.state.StateDelegate</implementation>
			<requirements>
				<requirement>
					<role>com.dianping.cat.task.TaskManager</role>
				</requirement>
				<requirement>
					<role>com.dianping.cat.report.ReportBucketManager</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>com.dianping.cat.consumer.cross.IpConvertManager</role>
			<implementation>com.dianping.cat.consumer.cross.IpConvertManager</implementation>
		</component>
		<component>
			<role>com.dianping.cat.analysis.MessageAnalyzer</role>
			<role-hint>cross</role-hint>
			<implementation>com.dianping.cat.consumer.cross.CrossAnalyzer</implementation>
			<instantiation-strategy>per-lookup</instantiation-strategy>
			<requirements>
				<requirement>
					<role>com.dianping.cat.report.ReportManager</role>
					<role-hint>cross</role-hint>
				</requirement>
				<requirement>
					<role>com.dianping.cat.config.server.ServerConfigManager</role>
				</requirement>
				<requirement>
					<role>com.dianping.cat.consumer.cross.IpConvertManager</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>com.dianping.cat.report.ReportManager</role>
			<role-hint>cross</role-hint>
			<implementation>com.dianping.cat.report.DefaultReportManager</implementation>
			<instantiation-strategy>per-lookup</instantiation-strategy>
			<configuration>
				<name>cross</name>
			</configuration>
			<requirements>
				<requirement>
					<role>com.dianping.cat.report.ReportDelegate</role>
					<role-hint>cross</role-hint>
				</requirement>
				<requirement>
					<role>com.dianping.cat.report.ReportBucketManager</role>
				</requirement>
				<requirement>
					<role>com.dianping.cat.core.dal.HourlyReportDao</role>
				</requirement>
				<requirement>
					<role>com.dianping.cat.core.dal.HourlyReportContentDao</role>
				</requirement>
				<requirement>
					<role>com.dianping.cat.report.DomainValidator</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>com.dianping.cat.report.ReportDelegate</role>
			<role-hint>cross</role-hint>
			<implementation>com.dianping.cat.consumer.cross.CrossDelegate</implementation>
			<requirements>
				<requirement>
					<role>com.dianping.cat.task.TaskManager</role>
				</requirement>
				<requirement>
					<role>com.dianping.cat.config.server.ServerFilterConfigManager</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>com.dianping.cat.analysis.MessageAnalyzer</role>
			<role-hint>matrix</role-hint>
			<implementation>com.dianping.cat.consumer.matrix.MatrixAnalyzer</implementation>
			<instantiation-strategy>per-lookup</instantiation-strategy>
			<requirements>
				<requirement>
					<role>com.dianping.cat.report.ReportManager</role>
					<role-hint>matrix</role-hint>
				</requirement>
				<requirement>
					<role>com.dianping.cat.config.server.ServerConfigManager</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>com.dianping.cat.report.ReportManager</role>
			<role-hint>matrix</role-hint>
			<implementation>com.dianping.cat.report.DefaultReportManager</implementation>
			<instantiation-strategy>per-lookup</instantiation-strategy>
			<configuration>
				<name>matrix</name>
			</configuration>
			<requirements>
				<requirement>
					<role>com.dianping.cat.report.ReportDelegate</role>
					<role-hint>matrix</role-hint>
				</requirement>
				<requirement>
					<role>com.dianping.cat.report.ReportBucketManager</role>
				</requirement>
				<requirement>
					<role>com.dianping.cat.core.dal.HourlyReportDao</role>
				</requirement>
				<requirement>
					<role>com.dianping.cat.core.dal.HourlyReportContentDao</role>
				</requirement>
				<requirement>
					<role>com.dianping.cat.report.DomainValidator</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>com.dianping.cat.report.ReportDelegate</role>
			<role-hint>matrix</role-hint>
			<implementation>com.dianping.cat.consumer.matrix.MatrixDelegate</implementation>
			<requirements>
				<requirement>
					<role>com.dianping.cat.task.TaskManager</role>
				</requirement>
				<requirement>
					<role>com.dianping.cat.config.server.ServerFilterConfigManager</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>com.dianping.cat.consumer.dependency.DatabaseParser</role>
			<implementation>com.dianping.cat.consumer.dependency.DatabaseParser</implementation>
		</component>
		<component>
			<role>com.dianping.cat.analysis.MessageAnalyzer</role>
			<role-hint>dependency</role-hint>
			<implementation>com.dianping.cat.consumer.dependency.DependencyAnalyzer</implementation>
			<instantiation-strategy>per-lookup</instantiation-strategy>
			<requirements>
				<requirement>
					<role>com.dianping.cat.report.ReportManager</role>
					<role-hint>dependency</role-hint>
				</requirement>
				<requirement>
					<role>com.dianping.cat.config.server.ServerConfigManager</role>
				</requirement>
				<requirement>
					<role>com.dianping.cat.config.server.ServerFilterConfigManager</role>
				</requirement>
				<requirement>
					<role>com.dianping.cat.consumer.dependency.DatabaseParser</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>com.dianping.cat.report.ReportManager</role>
			<role-hint>dependency</role-hint>
			<implementation>com.dianping.cat.report.DefaultReportManager</implementation>
			<instantiation-strategy>per-lookup</instantiation-strategy>
			<configuration>
				<name>dependency</name>
			</configuration>
			<requirements>
				<requirement>
					<role>com.dianping.cat.report.ReportDelegate</role>
					<role-hint>dependency</role-hint>
				</requirement>
				<requirement>
					<role>com.dianping.cat.report.ReportBucketManager</role>
				</requirement>
				<requirement>
					<role>com.dianping.cat.core.dal.HourlyReportDao</role>
				</requirement>
				<requirement>
					<role>com.dianping.cat.core.dal.HourlyReportContentDao</role>
				</requirement>
				<requirement>
					<role>com.dianping.cat.report.DomainValidator</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>com.dianping.cat.report.ReportDelegate</role>
			<role-hint>dependency</role-hint>
			<implementation>com.dianping.cat.consumer.dependency.DependencyDelegate</implementation>
			<requirements>
				<requirement>
					<role>com.dianping.cat.task.TaskManager</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>com.dianping.cat.config.content.ContentFetcher</role>
			<implementation>com.dianping.cat.config.content.DefaultContentFetcher</implementation>
		</component>
		<component>
			<role>com.dianping.cat.consumer.config.ProductLineConfigManager</role>
			<implementation>com.dianping.cat.consumer.config.ProductLineConfigManager</implementation>
			<requirements>
				<requirement>
					<role>com.dianping.cat.core.config.ConfigDao</role>
				</requirement>
				<requirement>
					<role>com.dianping.cat.config.content.ContentFetcher</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>com.dianping.cat.consumer.metric.MetricConfigManager</role>
			<implementation>com.dianping.cat.consumer.metric.MetricConfigManager</implementation>
			<requirements>
				<requirement>
					<role>com.dianping.cat.core.config.ConfigDao</role>
				</requirement>
				<requirement>
					<role>com.dianping.cat.config.content.ContentFetcher</role>
				</requirement>
				<requirement>
					<role>com.dianping.cat.consumer.config.ProductLineConfigManager</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>com.dianping.cat.analysis.MessageAnalyzer</role>
			<role-hint>metric</role-hint>
			<implementation>com.dianping.cat.consumer.metric.MetricAnalyzer</implementation>
			<instantiation-strategy>per-lookup</instantiation-strategy>
			<requirements>
				<requirement>
					<role>com.dianping.cat.report.ReportBucketManager</role>
				</requirement>
				<requirement>
					<role>com.dianping.cat.consumer.dal.BusinessReportDao</role>
				</requirement>
				<requirement>
					<role>com.dianping.cat.consumer.metric.MetricConfigManager</role>
				</requirement>
				<requirement>
					<role>com.dianping.cat.consumer.config.ProductLineConfigManager</role>
				</requirement>
				<requirement>
					<role>com.dianping.cat.task.TaskManager</role>
				</requirement>
				<requirement>
					<role>com.dianping.cat.config.server.ServerConfigManager</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>com.dianping.cat.consumer.storage.DatabaseParser</role>
			<implementation>com.dianping.cat.consumer.storage.DatabaseParser</implementation>
		</component>
		<component>
			<role>com.dianping.cat.consumer.storage.StorageReportUpdater</role>
			<implementation>com.dianping.cat.consumer.storage.StorageReportUpdater</implementation>
		</component>
		<component>
			<role>com.dianping.cat.analysis.MessageAnalyzer</role>
			<role-hint>storage</role-hint>
			<implementation>com.dianping.cat.consumer.storage.StorageAnalyzer</implementation>
			<instantiation-strategy>per-lookup</instantiation-strategy>
			<requirements>
				<requirement>
					<role>com.dianping.cat.report.ReportManager</role>
					<role-hint>storage</role-hint>
				</requirement>
				<requirement>
					<role>com.dianping.cat.report.ReportDelegate</role>
					<role-hint>storage</role-hint>
				</requirement>
				<requirement>
					<role>com.dianping.cat.config.server.ServerConfigManager</role>
				</requirement>
				<requirement>
					<role>com.dianping.cat.consumer.storage.DatabaseParser</role>
				</requirement>
				<requirement>
					<role>com.dianping.cat.consumer.storage.StorageReportUpdater</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>com.dianping.cat.report.ReportManager</role>
			<role-hint>storage</role-hint>
			<implementation>com.dianping.cat.report.DefaultReportManager</implementation>
			<instantiation-strategy>per-lookup</instantiation-strategy>
			<configuration>
				<name>storage</name>
			</configuration>
			<requirements>
				<requirement>
					<role>com.dianping.cat.report.ReportDelegate</role>
					<role-hint>storage</role-hint>
				</requirement>
				<requirement>
					<role>com.dianping.cat.report.ReportBucketManager</role>
				</requirement>
				<requirement>
					<role>com.dianping.cat.core.dal.HourlyReportDao</role>
				</requirement>
				<requirement>
					<role>com.dianping.cat.core.dal.HourlyReportContentDao</role>
				</requirement>
				<requirement>
					<role>com.dianping.cat.report.DomainValidator</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>com.dianping.cat.report.ReportDelegate</role>
			<role-hint>storage</role-hint>
			<implementation>com.dianping.cat.consumer.storage.StorageDelegate</implementation>
			<requirements>
				<requirement>
					<role>com.dianping.cat.task.TaskManager</role>
				</requirement>
				<requirement>
					<role>com.dianping.cat.config.server.ServerFilterConfigManager</role>
				</requirement>
				<requirement>
					<role>com.dianping.cat.consumer.storage.StorageReportUpdater</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>com.dianping.cat.consumer.config.AllReportConfigManager</role>
			<implementation>com.dianping.cat.consumer.config.AllReportConfigManager</implementation>
			<requirements>
				<requirement>
					<role>com.dianping.cat.core.config.ConfigDao</role>
				</requirement>
				<requirement>
					<role>com.dianping.cat.config.content.ContentFetcher</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>org.unidal.initialization.Module</role>
			<role-hint>cat-consumer</role-hint>
			<implementation>com.dianping.cat.consumer.CatConsumerModule</implementation>
		</component>
		<component>
			<role>org.unidal.dal.jdbc.mapping.TableProvider</role>
			<role-hint>business-report</role-hint>
			<implementation>org.unidal.dal.jdbc.mapping.SimpleTableProvider</implementation>
			<configuration>
				<physical-table-name>businessReport</physical-table-name>
				<data-source-name>cat</data-source-name>
			</configuration>
		</component>
		<component>
			<role>com.dianping.cat.consumer.dal.BusinessReportDao</role>
			<implementation>com.dianping.cat.consumer.dal.BusinessReportDao</implementation>
			<requirements>
				<requirement>
					<role>org.unidal.dal.jdbc.QueryEngine</role>
				</requirement>
			</requirements>
		</component>
	</components>
</plexus>
